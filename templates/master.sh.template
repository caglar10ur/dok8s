#!/bin/bash

# Specify the Kubernetes version to use.
KUBERNETES_VERSION="1.11.2"
KUBERNETES_CNI="0.6.0"

TOKEN=TOKEN

# k8s apt repo
curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

cat <<EOF > /etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF

# docker apt repo
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

cat <<EOF > /etc/apt/sources.list.d/docker.list
deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
EOF

# update/install packages
export DEBIAN_FRONTEND=noninteractive
apt-get update -y
apt-get -yq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade
apt-get install -y docker-ce \
    kubelet=${KUBERNETES_VERSION}-00 \
    kubeadm=${KUBERNETES_VERSION}-00 \
    kubernetes-cni=${KUBERNETES_CNI}-00

HOSTNAME=$(curl -s http://169.254.169.254/metadata/v1/hostname)
PUBLIC_IP=$(curl -s http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/address)
PRIVATE_IP=$(curl -s http://169.254.169.254/metadata/v1/interfaces/private/0/ipv4/address)

# Enable and start Docker.
systemctl enable docker
systemctl start docker

# Specify node IP for kubelet.
echo "Environment=\"KUBELET_EXTRA_ARGS=--node-ip=${PRIVATE_IP}\"" >> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
systemctl daemon-reload
systemctl restart kubelet

cat << EOF  > "/etc/kubeadm.config.yaml"
kind: MasterConfiguration
apiVersion: kubeadm.k8s.io/v1alpha1
token: ${TOKEN}
kubernetesVersion: ${KUBERNETES_VERSION}
nodeName: ${HOSTNAME}
api:
  advertiseAddress: ${PUBLIC_IP}
  bindPort: 443
apiServerCertSANs:
- ${PUBLIC_IP}
- ${PRIVATE_IP}
- ${HOSTNAME}
authorizationModes:
- Node
- RBAC
controllerManagerExtraArgs:
  horizontal-pod-autoscaler-use-rest-clients: "true"
  horizontal-pod-autoscaler-sync-period: "10s"
  node-monitor-grace-period: "10s"
apiServerExtraArgs:
  runtime-config: "api/all=true"
networking:
  podSubnet: 10.244.0.0/16
EOF

# Initialize cluster.
kubeadm reset
kubeadm init --config /etc/kubeadm.config.yaml

# flannel
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml --kubeconfig /etc/kubernetes/admin.conf

# dashboard
kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml --kubeconfig /etc/kubernetes/admin.conf

# setup for root user
mkdir -p ~/.kube
cp /etc/kubernetes/admin.conf ~/.kube/config

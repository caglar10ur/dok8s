#!/bin/bash

# Specify the Kubernetes version to use.
KUBERNETES_VERSION="1.14.1"
KUBERNETES_CNI="0.7.5"
DOCKER_VERSION="5:18.09.3~3-0~ubuntu-bionic"

TOKEN=TOKEN
MASTER_IP=MASTER_IP

HOSTNAME=$(curl -s http://169.254.169.254/metadata/v1/hostname)
PRIVATE_IP=$(curl -s http://169.254.169.254/metadata/v1/interfaces/private/0/ipv4/address)

# k8s apt repo
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

cat <<EOF > /etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF

# docker apt repo
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

cat <<EOF > /etc/apt/sources.list.d/docker.list
deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
EOF


# update/install packages
export DEBIAN_FRONTEND=noninteractive
apt-get update -y
apt-get -yq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade
apt-get install -y \
    docker-ce=${DOCKER_VERSION} \
    kubelet=${KUBERNETES_VERSION}-00 \
    kubeadm=${KUBERNETES_VERSION}-00 \
    kubernetes-cni=${KUBERNETES_CNI}-00

apt -y autoremove


# https://kubernetes.io/docs/setup/cri/
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

mkdir -p /etc/systemd/system/docker.service.d

systemctl daemon-reload
systemctl enable docker
systemctl restart docker

# Enable Flannel Networking
sysctl net.bridge.bridge-nf-call-iptables=1

# Specify node IP for kubelet.
echo "KUBELET_EXTRA_ARGS=--node-ip=${PRIVATE_IP} --cloud-provider=external --node-labels='dok8su/role=node'" > /etc/default/kubelet

systemctl daemon-reload
systemctl restart kubelet

kubeadm reset --force
kubeadm join --node-name "${HOSTNAME}" --token "${TOKEN}" "${MASTER_IP}":443 --discovery-token-unsafe-skip-ca-verification
